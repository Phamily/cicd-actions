kind: Deployment
apiVersion: apps/v1
metadata:
  name: <%= var(:name) %>
spec:
  template:
    metadata:
      annotations:
        alpha.image.policy.openshift.io/resolve-names: '*'
      labels:
        name: <%= var(:name) %>
    spec:
      volumes:
      - name: shared
        emptyDir: {}
      containers:
      - name: app
        image: <%= var(:app_image_url) %>
        imagePullPolicy: Always
        <% if var(:command) %>
        command: <%= var(:command) %>
        args: <%= var(:args) %>
        <% end %>
        env:
        - name: KUBE_APPLY_AT
          value: "<%= Time.now.to_i %>"
        <% var(:env).each do |k, v| %>
        - name: <%= k %>
          value: <%= v.to_s.inspect %>
        <% end %>
        volumeMounts:
        - name: shared
          mountPath: /shared_pod
  replicas: <%= var(:replicas) || 1 %>
  selector:
    matchLabels:
      name: <%= var(:name) %>

<% if var(:has_service) %>
---
kind: Service
apiVersion: v1
metadata:
  name: <%= var(:name) %>
spec:
  <% if var(:routing_mode) != 'auto' %>
  type: LoadBalancer
  <% end %>
  selector:
    name: <%= var(:name) %>
  ports:
  - port: 80
    protocol: TCP
    targetPort: <%= var(:target_port) %>
<% end %>

<% if var(:routing_mode) == 'auto' %>
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: <%= var(:name) %>
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  rules:
  - host: <%= var(:env)[var(:env)['KUBE_DEPLOY_HOST_ENV_VAR']] %>
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: <%= var(:name) %>
            port:
              number: 80
<% end %>
